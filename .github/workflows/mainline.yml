name: "Mainline"

on:
  push:
    branches:
      - master

jobs:
  # packer:
  #   name: packer
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v2

  #     # validate templates
  #     - name: Validate Template
  #       uses: hashicorp/packer-github-actions@master
  #       with:
  #         command: validate
  #         arguments: -syntax-only
  #         target: app.pkr.hcl

  #     - name: Initialize packer
  #       uses: hashicorp/packer-github-actions@master
  #       with:
  #         command: init
  #         target: .

  #     # build artifact
  #     - name: Build Artifact
  #       uses: hashicorp/packer-github-actions@master
  #       with:
  #         command: build
  #         arguments: "-color=false -on-error=abort"
  #         target: app.pkr.hcl
  #       env:
  #         PACKER_LOG: 1
  #         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  terraform:
    # needs: packer
    name: "Terraform"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: infrastructure/infra/terraform
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: tt-example/infrastructure
          token: ${{ secrets.GH_PAT }}
          path: infrastructure
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          # terraform_version: 0.13.0:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false
        continue-on-error: false

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false